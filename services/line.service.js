import { createClient } from "@supabase/supabase-js";
import dotenv from "dotenv";
dotenv.config();

const supabase = createClient(
  process.env.SUPABASE_URL,
  process.env.SUPABASE_KEY
);

// ‡πÅ‡∏õ‡∏•‡∏á‡∏Ñ‡∏≥‡πÑ‡∏ó‡∏¢ ‚Üí ‡∏≠‡∏±‡∏á‡∏Å‡∏§‡∏©
function normalizeType(type) {
  const map = {
    ‡∏£‡∏≤‡∏¢‡∏à‡πà‡∏≤‡∏¢: "expense",
    ‡∏£‡∏≤‡∏¢‡∏£‡∏±‡∏ö: "income",
    expense: "expense",
    income: "income",
  };
  return map[type?.trim()] || type;
}

export async function saveUserMessage(userId, text) {
  try {
    const parts = text.trim().split(" ");
    if (parts.length < 4) {
      return {
        message: "‚ùå ‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á (‡πÄ‡∏ä‡πà‡∏ô: ‡∏£‡∏≤‡∏¢‡∏à‡πà‡∏≤‡∏¢ ‡∏≠‡∏≤‡∏´‡∏≤‡∏£ ‡∏ï‡πâ‡∏°‡∏¢‡∏≥‡∏Å‡∏∏‡πâ‡∏á 50 ‡∏´‡∏£‡∏∑‡∏≠ expense food tomyumgunong 60)",
      };
    }

    let [type, category, name, amount] = parts;
    type = normalizeType(type); // ‡πÅ‡∏õ‡∏•‡∏á‡∏Ñ‡∏≥‡πÑ‡∏ó‡∏¢‡πÄ‡∏õ‡πá‡∏ô‡∏≠‡∏±‡∏á‡∏Å‡∏§‡∏©
    const value = parseFloat(amount);

    if (isNaN(value)) {
      return { message: "‚ùå ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÄ‡∏á‡∏¥‡∏ô‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á" };
    }

    // üîé ‡∏´‡∏≤ categoryId
    const { data: categoryData, error: catErr } = await supabase
      .from("category")
      .select("id")
      .eq("name", category)
      .maybeSingle();

    if (catErr) throw catErr;

    let categoryId;
    if (!categoryData) {
      // üÜï ‡∏ñ‡πâ‡∏≤‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ category ‡πÉ‡∏´‡πâ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÉ‡∏´‡∏°‡πà
      const { data: newCat, error: insertCatErr } = await supabase
        .from("category")
        .insert([{ name: category }])
        .select()
        .single();
      if (insertCatErr) throw insertCatErr;
      categoryId = newCat.id;
    } else {
      categoryId = categoryData.id;
    }

    // üßæ ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ï‡∏≤‡∏°‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó
    if (type === "expense") {
      const { error } = await supabase.from("list_expense").insert([
        {
          userId,
          categoryId,
          name,
          amount: value,
        },
      ]);
      if (error) throw error;
      return { message: `‚úÖ ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏£‡∏≤‡∏¢‡∏à‡πà‡∏≤‡∏¢ "${name}" ${value} ‡∏ö‡∏≤‡∏ó‡πÅ‡∏•‡πâ‡∏ß` };
    }

    if (type === "income") {
      const { error } = await supabase.from("list_income").insert([
        {
          userId,
          categoryId,
          name,
          amount: value,
        },
      ]);
      if (error) throw error;
      return { message: `‚úÖ ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏£‡∏≤‡∏¢‡∏£‡∏±‡∏ö "${name}" ${value} ‡∏ö‡∏≤‡∏ó‡πÅ‡∏•‡πâ‡∏ß` };
    }

    return { message: "‚ùå ‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏ï‡πâ‡∏≠‡∏á‡πÄ‡∏õ‡πá‡∏ô ‡∏£‡∏≤‡∏¢‡∏à‡πà‡∏≤‡∏¢/‡∏£‡∏≤‡∏¢‡∏£‡∏±‡∏ö ‡∏´‡∏£‡∏∑‡∏≠ expense/income ‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô" };
  } catch (err) {
    console.error("Insert error:", err.message);
    return { message: `‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î: ${err.message}` };
  }
}
