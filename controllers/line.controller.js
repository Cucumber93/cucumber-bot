const { Client } = require("@line/bot-sdk");
const expenseService = require("../services/expense.service.js");

async function handleEvent(event, config) {
  try {
    // ‚úÖ ‡∏ï‡∏£‡∏ß‡∏à‡∏ß‡πà‡∏≤‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏õ‡πá‡∏ô text ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
    if (event.type !== "message" || event.message.type !== "text") {
      console.log("‚ö†Ô∏è Non-text event, skipping.");
      return null;
    }

    console.log("üí¨ User message:", event.message.text);

    // ‚úÖ ‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÑ‡∏õ‡∏¢‡∏±‡∏á service ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÉ‡∏ô Supabase
    const result = await expenseService.addExpenseFromMessage(event.message.text);
    console.log("üßæ Service result:", result);

    // ‚úÖ ‡∏™‡∏£‡πâ‡∏≤‡∏á LINE client ‡πÉ‡∏´‡∏°‡πà‡∏ó‡∏∏‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏õ‡∏•‡∏≠‡∏î‡∏†‡∏±‡∏¢
    const client = new Client(config);

    // ‚úÖ ‡∏ñ‡πâ‡∏≤ service ‡πÑ‡∏°‡πà‡∏°‡∏µ replyMessages ‡πÉ‡∏´‡πâ‡∏ï‡∏≠‡∏ö‡∏Å‡∏•‡∏±‡∏ö‡∏Ñ‡πà‡∏≤ default
    const messages =
      (result && result.replyMessages) || [
        { type: "text", text: "‚ùå No reply message returned from service." },
      ];

    // ‚úÖ ‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ï‡∏≠‡∏ö‡∏Å‡∏•‡∏±‡∏ö‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡πÉ‡∏ô LINE
    await client.replyMessage(event.replyToken, messages);
    console.log("‚úÖ Reply sent to LINE:", messages);
  } catch (err) {
    console.error("‚ùå handleEvent error:", err);
  }
}

// ‚úÖ Export ‡πÅ‡∏ö‡∏ö CommonJS
module.exports = { handleEvent };
